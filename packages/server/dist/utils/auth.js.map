{"version":3,"sources":["../../src/utils/auth.ts"],"names":["dotenv","config","getUser","token","user","decodedToken","jwt","verify","substring","process","env","JWT_SECRET","UserModel","findOne","_id","id","err","generateToken","sign","authenticate","plainTextPassword","bcrypt","compare","password"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;;;;;;;AAEAA,gBAAOC,MAAP;;SAEsBC,O;;;;;+BAAf,WAAuBC,KAAvB,EAAsC;AAC3C,QAAI,CAACA,KAAL,EAAY,OAAO;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAP;;AAEZ,QAAI;AACF,YAAMC,YAAY,GAAGC,sBAAIC,MAAJ,CAAWJ,KAAK,CAACK,SAAN,CAAgB,CAAhB,CAAX,EAA+BC,OAAO,CAACC,GAAR,CAAYC,UAA3C,CAArB;;AAEA,YAAMP,IAAI,SAASQ,mBAAUC,OAAV,CAAkB;AACnCC,QAAAA,GAAG,EAAGT,YAAD,CAAiCU;AADH,OAAlB,CAAnB;AAIA,aAAO;AACLX,QAAAA;AADK,OAAP;AAGD,KAVD,CAUE,OAAOY,GAAP,EAAY;AACZ,aAAO;AAAEZ,QAAAA,IAAI,EAAE;AAAR,OAAP;AACD;AACF,G;;;;AAEM,SAASa,aAAT,CAAuBb,IAAvB,EAA8C;AACnD,SAAQ,OAAME,sBAAIY,IAAJ,CAAS;AAAEH,IAAAA,EAAE,EAAEX,IAAI,CAACU;AAAX,GAAT,EAA2BL,OAAO,CAACC,GAAR,CAAYC,UAAvC,CAAmD,EAAjE;AACD;;AAEM,SAASQ,YAAT,CAAmCC,iBAAnC,EAA8D;AACnE,SAAOC,kBAAOC,OAAP,CAAeF,iBAAf,EAAkC,KAAKG,QAAvC,CAAP;AACD","sourcesContent":["import bcrypt from \"bcryptjs\";\nimport jwt from \"jsonwebtoken\";\nimport dotenv from \"dotenv\";\n\nimport UserModel, { IUser } from \"../modules/User/UserModel\";\n\ndotenv.config();\n\nexport async function getUser(token: string) {\n  if (!token) return { user: null };\n\n  try {\n    const decodedToken = jwt.verify(token.substring(4), process.env.JWT_SECRET);\n\n    const user = await UserModel.findOne({\n      _id: (decodedToken as { id: string }).id,\n    });\n\n    return {\n      user,\n    };\n  } catch (err) {\n    return { user: null };\n  }\n}\n\nexport function generateToken(user: { _id: string }) {\n  return `JWT ${jwt.sign({ id: user._id }, process.env.JWT_SECRET)}`;\n}\n\nexport function authenticate(this: IUser, plainTextPassword: string) {\n  return bcrypt.compare(plainTextPassword, this.password);\n}\n"],"file":"auth.js"}