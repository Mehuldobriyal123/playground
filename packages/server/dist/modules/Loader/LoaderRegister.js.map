{"version":3,"sources":["../../../src/modules/Loader/LoaderRegister.ts"],"names":["loaders","registerLoader","key","getLoader","getDataloaders","Object","keys","reduce","prev","loaderKey"],"mappings":";;;;;;;;;;;;;AAIA,MAAMA,OAEL,GAAG,EAFJ;;AAIA,MAAMC,cAAc,GAAG,CACrBC,GADqB,EAErBC,SAFqB,KAGlB;AACHH,EAAAA,OAAO,CAACE,GAAD,CAAP,GAAeC,SAAf;AACD,CALD;;;;AAOA,MAAMC,cAAc,GAAG,MACpBC,MAAM,CAACC,IAAP,CAAYN,OAAZ,CAAD,CAAgDO,MAAhD,CACE,CAACC,IAAD,EAAOC,SAAP,qCACKD,IADL;AAEE,GAACC,SAAD,GAAaT,OAAO,CAACS,SAAD,CAAP;AAFf,EADF,EAKE,EALF,CADF","sourcesContent":["export interface DataLoaders {\n  UserLoader: ReturnType<typeof import(\"../User/UserLoader\").getLoader>;\n}\n\nconst loaders: {\n  [Name in keyof DataLoaders]: () => DataLoaders[Name];\n} = {} as any;\n\nconst registerLoader = <Name extends keyof DataLoaders>(\n  key: Name,\n  getLoader: () => DataLoaders[Name],\n) => {\n  loaders[key] = getLoader as any;\n};\n\nconst getDataloaders = (): DataLoaders =>\n  (Object.keys(loaders) as (keyof DataLoaders)[]).reduce(\n    (prev, loaderKey) => ({\n      ...prev,\n      [loaderKey]: loaders[loaderKey](),\n    }),\n    {},\n  ) as any;\n\nexport { registerLoader, getDataloaders };\n"],"file":"LoaderRegister.js"}